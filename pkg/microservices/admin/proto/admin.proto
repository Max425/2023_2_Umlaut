syntax = "proto3";

option go_package = "./;proto";

package proto;

//protoc --go_out=. --go-grpc_out=. --go-grpc_opt=paths=source_relative --go_opt=paths=source_relative *.proto

message Feedback {
  int32 Id = 1;
  int32 UserId = 2;
  int32 Rating = 3;
  string Liked = 4;
  string NeedFix = 5;
  string CommentFix = 6;
  string Comment = 7;
  bool Show = 8;
}

message Recommendation {
  int32 Id = 1;
  int32 UserId = 2;
  int32 Recommend = 3;
  bool Show = 4;
}

message FeedbackStatistic {
  float AvgRating = 1;
  repeated int32 RatingCount = 2;
  repeated LikedMap LikedMap = 3;
  repeated NeedFixMap NeedFixMap = 4;
  repeated string Comments = 5;
}

message Empty {
}

message LikedMap {
  string Liked = 1;
  int32 Count = 2;
}

message NeedFixMap {
  string NeedFix = 1;
  repeated NeedFixObject NeedFixObject = 2;
}

message NeedFixObject {
  int32 Count = 1;
  repeated string CommentFix = 2;
}

message RecommendationStatistic {
  float AvgRecommend = 1;
  float NPS = 2;
  repeated int32 RecommendCount = 3;
}

service Admin {
  rpc GetFeedbackStatistic(Empty) returns(FeedbackStatistic) {}
  rpc GetRecommendationStatistic(Empty) returns(RecommendationStatistic) {}
  rpc CreateFeedback(Feedback) returns(Empty) {}
  rpc CreateRecommendation(Recommendation) returns(Empty) {}
  rpc CreateFeedFeedback(Recommendation) returns(Empty) {}
}
