version: '3.8'

services:
  authorization:
    image: umlaut-auth:latest
    command: ./wait-for-postgres.sh db_umlaut ./auth
    restart: always
    depends_on:
      - db_umlaut
      - redis
      - db_admin
    ports:
      - "8001:8001"
    environment:
      - DB_PASSWORD=1474

  feed:
    image: umlaut-feed:latest
    command: ./wait-for-postgres.sh db_umlaut ./feed
    restart: always
    depends_on:
      - db_umlaut
      - redis
    ports:
      - "8002:8002"
    environment:
      - DB_PASSWORD=1474

  admin:
    image: umlaut-admin:latest
    command: ./wait-for-postgres.sh db_admin ./admin
    restart: always
    depends_on:
      - db_admin
    ports:
      - "8003:8003"
    environment:
      - DB_PASSWORD=1474

  umlaut:
    image: umlaut-app:latest
    command: ./wait-for-postgres.sh db_umlaut ./umlaut
    ports:
      - "8000:8000"
    depends_on:
      - db_umlaut
      - redis
      - minio
      - authorization
    environment:
      - DB_PASSWORD=1474

  db_umlaut:
    restart: always
    image: postgres:latest
    volumes:
      - ./.database/postgres/data:/var/lib/postgresql/data
      - ./db/umlaut/migrations/000001_init.up.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=1474
    ports:
      - "5432:5432"

  db_admin:
    restart: always
    image: postgres:latest
    volumes:
      - ./.database/postgres_admin/data:/var/lib/postgresql/data
      - ./db/admin/migrations/000001_init.up.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=1474
    ports:
      - "5434:5432"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    command: server /data --address ":9000" --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: umlaut
      MINIO_ROOT_PASSWORD: minio123
      MINIO_HTTP_TRACE: /tmp/minio.log
    volumes:
      - ./.database/minio-storage:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  nginx:
    image: nginx:latest
    build:
      context: ./
      dockerfile: nginx.Dockerfile
    restart: unless-stopped
    tty: true
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/umlaut-bmstu.me/fullchain.pem:/etc/keys/umlaut-bmstu.me/fullchain.pem
      - /etc/letsencrypt/live/umlaut-bmstu.me/privkey.pem:/etc/keys/umlaut-bmstu.me/privkey.pem
      - /home/ubuntu/front/2023_2_Umlaut/dist:/var/www/html
    ports:
      - "80:80"
      - "443:443"
      - "8050:8050"
    depends_on:
      - umlaut

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/config
    command:
      - '--config.file=/etc/config/prometheus.yml'

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - ./monitoring:/etc/config

  grafana:
    container_name: grafana
    image: grafana/grafana:latest-ubuntu
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring:/etc/config
      - grafana_data:/var/lib/grafana

volumes:
  grafana_data: