basePath: /
definitions:
  handler.ClientResponseDto-array_model_Dialog:
    properties:
      message:
        type: string
      payload:
        items:
          $ref: '#/definitions/model.Dialog'
        type: array
      status:
        type: integer
    type: object
  handler.ClientResponseDto-array_model_User:
    properties:
      message:
        type: string
      payload:
        items:
          $ref: '#/definitions/model.User'
        type: array
      status:
        type: integer
    type: object
  handler.ClientResponseDto-array_string:
    properties:
      message:
        type: string
      payload:
        items:
          type: string
        type: array
      status:
        type: integer
    type: object
  handler.ClientResponseDto-handler_idResponse:
    properties:
      message:
        type: string
      payload:
        $ref: '#/definitions/handler.idResponse'
      status:
        type: integer
    type: object
  handler.ClientResponseDto-model_User:
    properties:
      message:
        type: string
      payload:
        $ref: '#/definitions/model.User'
      status:
        type: integer
    type: object
  handler.ClientResponseDto-string:
    properties:
      message:
        type: string
      payload:
        type: string
      status:
        type: integer
    type: object
  handler.deleteLink:
    properties:
      link:
        type: string
    type: object
  handler.idResponse:
    properties:
      id:
        type: integer
    type: object
  handler.signInInput:
    properties:
      mail:
        type: string
      password:
        type: string
    required:
    - mail
    - password
    type: object
  handler.signUpInput:
    properties:
      mail:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - mail
    - name
    - password
    type: object
  model.Dialog:
    properties:
      companion:
        type: string
      id:
        type: integer
      last_message:
        $ref: '#/definitions/model.Message'
      user1_id:
        type: integer
      user2_id:
        type: integer
    type: object
  model.Like:
    properties:
      liked_to_user_id:
        type: integer
    type: object
  model.Message:
    properties:
      created_at:
        type: string
      dialog_id:
        type: integer
      id:
        type: integer
      message_text:
        type: string
      sender_id:
        type: integer
    type: object
  model.User:
    properties:
      age:
        type: integer
      birthday:
        type: string
      description:
        type: string
      education:
        type: string
      hobbies:
        type: string
      id:
        type: integer
      image_paths:
        items:
          type: string
        type: array
      looking:
        type: string
      mail:
        type: string
      name:
        type: string
      online:
        type: boolean
      password:
        type: string
      prefer_gender:
        type: integer
      tags:
        items:
          type: string
        type: array
      user_gender:
        type: integer
    required:
    - mail
    - name
    - password
    type: object
host: umlaut-bmstu.me:8000
info:
  contact: {}
  description: API Server for Umlaut Application
  title: Umlaut API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: Sign-in input parameters
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: log in to account
      tags:
      - auth
  /api/v1/auth/logout:
    get:
      consumes:
      - application/json
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: log out of account
      tags:
      - auth
  /api/v1/auth/sign-up:
    post:
      consumes:
      - application/json
      operationId: create-account
      parameters:
      - description: Sign-up input user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-handler_idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: sign up account
      tags:
      - auth
  /api/v1/dialog:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-array_model_Dialog'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: get dialog message
      tags:
      - dialog
  /api/v1/dialogs:
    get:
      consumes:
      - application/json
      operationId: dialog
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-array_model_Dialog'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: get user dialogs
      tags:
      - dialog
  /api/v1/feed:
    get:
      consumes:
      - application/json
      operationId: feed
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-model_User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: get user for feed
      tags:
      - feed
  /api/v1/feed/users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-array_model_User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: get users for feed
      tags:
      - feed
  /api/v1/like:
    post:
      consumes:
      - application/json
      operationId: like
      parameters:
      - description: Like data to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Like'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: create user like
      tags:
      - like
  /api/v1/tag:
    get:
      consumes:
      - application/json
      operationId: tag
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-array_string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: get all tags
      tags:
      - tag
  /api/v1/user:
    get:
      consumes:
      - application/json
      operationId: user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-model_User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: get user information
      tags:
      - user
    post:
      consumes:
      - application/json
      operationId: user
      parameters:
      - description: User data to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-model_User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: update user
      tags:
      - user
  /api/v1/user/photo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: link for deleting file
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.deleteLink'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: delete user photo
      tags:
      - user
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ClientResponseDto-string'
      summary: update user photo
      tags:
      - user
swagger: "2.0"
